//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrdersAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OrdersAPIPOCEntities : DbContext
    {
        public OrdersAPIPOCEntities()
            : base("name=OrdersAPIPOCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TblexeOrder> TblexeOrders { get; set; }
        public virtual DbSet<TblMstBranch> TblMstBranches { get; set; }
        public virtual DbSet<TblMstCustomer> TblMstCustomers { get; set; }
        public virtual DbSet<TblMstCustomerAuthorisation> TblMstCustomerAuthorisations { get; set; }
        public virtual DbSet<TblMstInventory> TblMstInventories { get; set; }
        public virtual DbSet<TblMstNUIStatu> TblMstNUIStatus { get; set; }
    
        public virtual int SpInsOrder(Nullable<int> orderUno, string orderCode, string customerName, string mobile, string itemCode, string itemName, Nullable<int> quantity, ObjectParameter outParameter, ObjectParameter outMessage)
        {
            var orderUnoParameter = orderUno.HasValue ?
                new ObjectParameter("OrderUno", orderUno) :
                new ObjectParameter("OrderUno", typeof(int));
    
            var orderCodeParameter = orderCode != null ?
                new ObjectParameter("OrderCode", orderCode) :
                new ObjectParameter("OrderCode", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsOrder", orderUnoParameter, orderCodeParameter, customerNameParameter, mobileParameter, itemCodeParameter, itemNameParameter, quantityParameter, outParameter, outMessage);
        }
    
        public virtual ObjectResult<SpGetOrder_Result> SpGetOrder(string orderId)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetOrder_Result>("SpGetOrder", orderIdParameter);
        }
    }
}
